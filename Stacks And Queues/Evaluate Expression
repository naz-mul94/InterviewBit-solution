int find_res(int a, int b, string c)
{
    if(!c.compare("+"))
    return a+b;
    else if(!c.compare("-"))
    return b-a;
    else if (!c.compare("*"))
    return a*b;
    else return b/a;
}

int Solution::evalRPN(vector<string> &A) {
    stack<int> ans;
    int res, first, sec;
    
    for(int i=0;i<A.size();i++)
    {
        
        

        if(!A[i].compare("+")||!A[i].compare("-")||!A[i].compare("*")||!A[i].compare("/"))
        {
            first=ans.top();//cout<<"hello\n";
            ans.pop();
            sec=ans.top();
            ans.pop();//cout<<first<<"    "<<A[i]<<"    "<<sec<<endl;
            res=find_res(first, sec, A[i]);//cout<<res<<endl;
            ans.push(res);
        }
        else 
        {
            ans.push(stoi(A[i]));
        }
    }
    res=ans.top();
    return res;
}
