int Solution::isInterleave(string A, string B, string C) {
    vector<vector<int>> dp(A.size()+1, vector<int>(B.size()+1, 0));
    if(C.size()<min(A.size(), B.size()))return 0;
    for(int i =0;i<=A.size();i++)
    {
        for(int j=0;j<=B.size();j++ )
        {
            if(i==0 && j==0)
                dp[i][j]=1;
            else if(i==0)
            {
                if(B[j-1]==C[j-1])
                    dp[i][j]=dp[i][j-1];
            }
            else if(j==0)
            {
                if(A[i-1] == C[i-1])
                    dp[i][j] = dp[i-1][j];
            }
            else if(B[j-1]==C[i+j-1] && A[i-1] != C[i+j-1])
                dp[i][j] = dp[i][j-1];
            else if(A[i-1] == C[i+j-1] && B[j-1] != C[i+j-1])
                dp[i][j] = dp[i-1][j];
            else if(B[j-1]==C[i+j-1] && A[i-1] == C[i+j-1])
                dp[i][j] =(dp[i-1][j] || dp[i][j-1]);

        }
    }
    return dp[A.size()][B.size()];
}
