/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
int check_balance(TreeNode* A, int* balanced)
{
    if(!A)
       return 0;

    int l_dept = check_balance(A->left, balanced);
    if (!(*balanced)) return 0;
    int r_dept = check_balance(A->right, balanced);
    if (!(*balanced)) return 0;
    *balanced = (abs(l_dept - r_dept)<2)?1:0;
    return (1+max(l_dept, r_dept));
}
int Solution::isBalanced(TreeNode* A) {
    if(!A)return 1;
    int balanced = 1;
    check_balance(A, &balanced);
    return balanced;

}
